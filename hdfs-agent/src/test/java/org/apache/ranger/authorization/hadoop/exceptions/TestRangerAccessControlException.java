/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.ranger.authorization.hadoop.exceptions;

import org.apache.hadoop.security.AccessControlException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

/**
 * @generated by Cursor
 * @description : Unit Test cases for RangerAccessControlException
 */

@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestRangerAccessControlException {
    @Test
    public void test01_constructWithMessage_setsMessage() {
        String                       message = "Permission denied: user=test, access=READ, inode=/path";
        RangerAccessControlException ex      = new RangerAccessControlException(message);

        Assertions.assertEquals(message, ex.getMessage());
    }

    @Test
    public void test02_isInstanceOfAccessControlException() {
        RangerAccessControlException ex = new RangerAccessControlException("msg");

        Assertions.assertInstanceOf(AccessControlException.class, ex);
    }
}
