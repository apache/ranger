/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.ranger.authorization.hive.authorizer;

import org.apache.hadoop.hive.ql.security.authorization.plugin.HiveResourceACLs;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;

/**
 * @generated by Cursor
 * @description : Unit Test cases for RangerHiveResourceACLs
 */
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestRangerHiveResourceACLs {
    @Test
    public void test01_defaultConstructorReturnsEmptyMaps() {
        RangerHiveResourceACLs acls = new RangerHiveResourceACLs();

        Assertions.assertTrue(acls.getUserPermissions().isEmpty());
        Assertions.assertTrue(acls.getGroupPermissions().isEmpty());
    }

    @Test
    public void test02_paramConstructorStoresMaps() {
        Map<String, Map<HiveResourceACLs.Privilege, HiveResourceACLs.AccessResult>> user = new HashMap<>();
        user.put("u1", new EnumMap<>(HiveResourceACLs.Privilege.class));
        Map<String, Map<HiveResourceACLs.Privilege, HiveResourceACLs.AccessResult>> group = new HashMap<>();
        group.put("g1", new EnumMap<>(HiveResourceACLs.Privilege.class));

        RangerHiveResourceACLs acls = new RangerHiveResourceACLs(user, group);

        Assertions.assertEquals(user.keySet(), acls.getUserPermissions().keySet());
        Assertions.assertEquals(group.keySet(), acls.getGroupPermissions().keySet());
    }
}
