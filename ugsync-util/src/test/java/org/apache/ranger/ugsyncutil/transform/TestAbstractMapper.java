/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.ranger.ugsyncutil.transform;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Collections;

/**
 * @generated by Cursor
 * @description : Unit Test cases for AbstractMapper
 */

@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestAbstractMapper {
    @Test
    public void test01_DefaultInitDoesNotThrow() {
        DummyMapper mapper = new DummyMapper();
        mapper.init("base", Collections.singletonList("s/a/b/"), "/");
        // no exception expected
    }

    @Test
    public void test02_DefaultTransformReturnsNull() {
        DummyMapper mapper = new DummyMapper();
        Assertions.assertNull(mapper.transform("value"));
    }

    public static class DummyMapper extends AbstractMapper {
        // use default init and transform from AbstractMapper
    }
}
