/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.ranger.ugsyncutil.model;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

/**
 * @generated by Cursor
 * @description : Unit Test cases for UgsyncAuditInfo
 */

@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestUgsyncAuditInfo {
    @Test
    public void test01_GettersSettersAndToString() {
        UgsyncAuditInfo audit = new UgsyncAuditInfo();
        audit.setUserName("admin");
        audit.setSessionId("sess-1");
        audit.setNoOfNewUsers(5L);
        audit.setNoOfNewGroups(2L);
        audit.setNoOfModifiedUsers(3L);
        audit.setNoOfModifiedGroups(1L);
        audit.setSyncSource("LDAP");

        LdapSyncSourceInfo ldap = new LdapSyncSourceInfo();
        ldap.setLdapUrl("ldap://example");
        UnixSyncSourceInfo unix = new UnixSyncSourceInfo();
        unix.setUnixBackend("nss");
        FileSyncSourceInfo file = new FileSyncSourceInfo();
        file.setFileName("users.json");

        audit.setLdapSyncSourceInfo(ldap);
        audit.setUnixSyncSourceInfo(unix);
        audit.setFileSyncSourceInfo(file);

        Assertions.assertEquals("admin", audit.getUserName());
        Assertions.assertEquals("sess-1", audit.getSessionId());
        Assertions.assertEquals(5L, audit.getNoOfNewUsers());
        Assertions.assertEquals(2L, audit.getNoOfNewGroups());
        Assertions.assertEquals(3L, audit.getNoOfModifiedUsers());
        Assertions.assertEquals(1L, audit.getNoOfModifiedGroups());
        Assertions.assertEquals("LDAP", audit.getSyncSource());
        Assertions.assertEquals(ldap, audit.getLdapSyncSourceInfo());
        Assertions.assertEquals(unix, audit.getUnixSyncSourceInfo());
        Assertions.assertEquals(file, audit.getFileSyncSourceInfo());

        String s = audit.toString();
        Assertions.assertTrue(s.contains("UgsyncAuditInfo"));
        Assertions.assertTrue(s.contains("LDAP"));
        Assertions.assertTrue(s.contains("5"));
        Assertions.assertTrue(s.contains("2"));
        Assertions.assertTrue(s.contains("3"));
        Assertions.assertTrue(s.contains("1"));
        Assertions.assertTrue(s.contains("ldap://example"));
        Assertions.assertTrue(s.contains("nss"));
        Assertions.assertTrue(s.contains("users.json"));

        StringBuilder sb = new StringBuilder();
        audit.toString(sb);
        Assertions.assertEquals(s, sb.toString());
    }
}
