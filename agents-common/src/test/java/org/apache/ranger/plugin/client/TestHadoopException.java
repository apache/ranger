/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.ranger.plugin.client;

import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
* @generated by Cursor
* @description <Unit Test for HadoopException class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestHadoopException {
    @Test
    public void test01_generateResponseDataMap_populatesFields() {
        HadoopException ex = new HadoopException("msg");
        ex.generateResponseDataMap(false, "m1", "d1", 10L, "f1");
        assertNotNull(ex.getResponseData());
        assertEquals(false, ex.getResponseData().get("connectivityStatus"));
        assertEquals("m1", ex.getResponseData().get("message"));
        assertEquals("d1", ex.getResponseData().get("description"));
        assertEquals(10L, ex.getResponseData().get("objectId"));
        assertEquals("f1", ex.getResponseData().get("fieldName"));
    }

    @Test
    public void test02_getMessage_collectsFromCauses() {
        Exception inner = new Exception("inner");
        Exception outer = new Exception("outer", inner);
        HadoopException ex = new HadoopException("wrap", outer);
        String s = ex.getMessage(outer);
        assertEquals("outer. \ninner. \n", s);
    }
}
