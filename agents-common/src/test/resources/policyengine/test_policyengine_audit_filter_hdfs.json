{
  "serviceName":"hdfsdev",

  "serviceDef":{ "name":"hdfs", "id":1,
    "resources":[
      {"name":"path","type":"path","level":1,"mandatory":true,"lookupSupported":true,"matcher":"org.apache.ranger.plugin.resourcematcher.RangerPathResourceMatcher","matcherOptions":{"wildCard":true, "ignoreCase":true},"label":"Resource Path","description":"HDFS file or directory path"}
    ],

    "accessTypes":[
      {"name":"read","label":"Read"},
      {"name":"write","label":"Write"},
      {"name":"execute","label":"Execute"}
    ]
  },

  "serviceConfig": {
    "ranger.plugin.audit.filters": "[ {'accessResult': 'DENIED', 'isAudited': true}, {'users': ['unaudited-user1'], 'groups': ['unaudited-group1'], 'roles': ['unaudited-role1'], 'isAudited': false}, {'actions': [ 'listStatus', 'getfileinfo' ], 'accessTypes':['execute'], 'isAudited': false}, {'resources':{'path':{'values':['/audited'], 'isRecursive': true}},'isAudited': true}, {'resources':{'path':{'values':['/unaudited'], 'isRecursive': true}},'isAudited': false} ]"
  },

  "policies":[
    { "id":10,"name":"/audited/","isEnabled":true,"isAuditEnabled":true,
      "isDenyAllElse": true,
      "resources":{"path":{"values":["/audited"],"isRecursive":true}},
      "policyItems":[
        {"accesses":[{"type":"write","isAllowed":true},{"type":"read","isAllowed":true},{"type":"execute","isAllowed":true}],"users":["allowed-user1", "unaudited-user1"], "groups": ["unaudited-group1"], "roles": ["unaudited-role1"] }
      ]
    },
    { "id":11,"name":"/unaudited/","isEnabled":true,"isAuditEnabled":true,
      "isDenyAllElse": true,
      "resources":{"path":{"values":["/unaudited"],"isRecursive":true}},
      "policyItems":[
        {"accesses":[{"type":"write","isAllowed":true},{"type":"read","isAllowed":true},{"type":"execute","isAllowed":true}],"users":["allowed-user1"]}
      ]
    }
  ],

  "tagPolicyInfo": {
    "serviceName":"tagdev",

    "serviceDef": { "name": "tag", "id": 100,
      "resources": [
        { "name": "tag", "type": "string", "level": 1, "mandatory": true, "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher", "matcherOptions": { "wildCard": false, "ignoreCase": false }, "label": "TAG", "description": "TAG" }
      ],
      "accessTypes": [
        { "name": "hdfs:read", "label": "hdfs:Read"  },
        { "name": "hdfs:write", "label": "hdfs:Write" },
        { "name": "hdfs:execute", "label": "hdfs:Execute" }
      ]
    },

    "serviceConfig": {
      "ranger.plugin.audit.filters": "[ {'resources':{'tag':{'values':['AUDIT_ALL_ACCESS']}},'isAudited': true}, {'resources':{'tag':{'values':['NO_AUDIT_ACCESS']}},'isAudited': false} ]"
    },

    "tagPolicies":[
      { "id":101, "name":"PII", "isEnabled":true, "isAuditEnabled":true,
        "resources":{"tag":{"values":["PII"]}},
        "policyItems":[
          { "accesses":[{"type":"hdfs:read", "isAllowed":true},{"type":"hdfs:write", "isAllowed":true}], "users":["allowed-user1", "unaudited-user1"], "groups":["unaudited-group1"], "roles":["unaudited-role1"]}
        ]
      }
    ]
  },

  "tests":[
    { "name":"audit denied access: resource=/audited/test.txt, accessType=read, action=null, user=denied-user1",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"read", "user":"denied-user1" },
      "result":{"isAudited":true,"isAllowed":false,"policyId":-1}
    },
    { "name":"audit denied access: resource=/unaudited/test.txt, accessType=read, action=null, user=denied-user1",
      "request":{ "resource":{"elements":{"path":"/unaudited/test.txt"}}, "accessType":"read","user":"denied-user1" },
      "result":{"isAudited":true,"isAllowed":false,"policyId":-1}
    },
    { "name":"audit read access to /audited: resource=/audited/test.txt, accessType=read, action=null, user=allowed-user1",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"read","user":"allowed-user1" },
      "result":{"isAudited":true,"isAllowed":true,"policyId":10}
    },
    { "name":"audit write access to /audited: resource=/audited/test.txt, accessType=write, action=null, user=allowed-user1",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"write","user":"allowed-user1" },
      "result":{"isAudited":true,"isAllowed":true,"policyId":10}
    },
    { "name":"no audit for access to /unaudited: resource=/unaudited/test.txt, accessType=read, action=null, user=allowed-user1",
      "request":{ "resource":{"elements":{"path":"/unaudited/test.txt"}}, "accessType":"read","user":"allowed-user1" },
      "result":{"isAudited":false,"isAllowed":true,"policyId":11}
    },
    { "name":"no audit for listStatus action: resource=/audited/test.txt', accessType=read, action=listStatus, user=allowed-user1",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"read","action":"listStatus","user":"allowed-user1" },
      "result":{"isAudited":false,"isAllowed":true,"policyId":10}
    },
    { "name":"no audit for getfileinfo action: resource=/audited/test.txt, accessType=read, action=getfileinfo, user=allowed-user1",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"read","action":"getfileinfo","user":"allowed-user1" },
      "result":{"isAudited":false,"isAllowed":true,"policyId":10}
    },
    { "name":"no audit for execute access: resource=/audited/test.txt, accessType=execute, action=null, user=allowed-user1",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"execute","user":"allowed-user1" },
      "result":{"isAudited":false,"isAllowed":true,"policyId":10}
    },
    { "name":"no audit for unaudited-user1 user: resource=/audited/test.txt, accessType=execute, action=null, user=unaudited-user1",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"write","user":"unaudited-user1" },
      "result":{"isAudited":false,"isAllowed":true,"policyId":10}
    },
    { "name":"no audit for unaudited-group1 group: resource=/audited/test.txt, accessType=execute, action=null, group=unaudited-group1",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"write","user":"nonexisting-user1", "userGroups":["unaudited-group1"] },
      "result":{"isAudited":false,"isAllowed":true,"policyId":10}
    },
    { "name":"no audit for unaudited-role1 role: resource=/audited/test.txt, accessType=execute, action=null, role=unaudited-role1",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"write","user":"nonexisting-user1", "userGroups":["nonexisting-group1"], "userRoles":["unaudited-role1"] },
      "result":{"isAudited":false,"isAllowed":true,"policyId":10}
    },
    { "name":"audit access to AUDIT_ALL_ACCESS tagged: resource=/unaudited/test.txt, accessType=write, action=null, user=allowed-user1, tags=AUDIT_ALL_ACCESS",
      "request":{ "resource":{"elements":{"path":"/unaudited/test.txt"}}, "accessType":"write", "user":"allowed-user1", "context":{"TAGS": "[{'type':'AUDIT_ALL_ACCESS'}]"}},
      "result":{"isAudited":true,"isAllowed":true,"policyId":10}
    },
    { "name":"no audit access to NO_AUDIT_ACCESS tagged: resource=/audited/test.txt, accessType=write, action=null, user=allowed-user1, tags=NO_AUDIT_ACCESS",
      "request":{ "resource":{"elements":{"path":"/audited/test.txt"}}, "accessType":"write", "user":"allowed-user1", "context":{"TAGS": "[{'type':'NO_AUDIT_ACCESS'}]"}},
      "result":{"isAudited":false,"isAllowed":true,"policyId":10}
    }
  ]
}

