/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.ranger.authorization.hbase;

import org.apache.hadoop.conf.Configuration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

/**
* @generated by Cursor
* @description <Unit Test for HbaseFactory class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestHbaseFactory {
    @Test
    public void test01_singleton() {
        HbaseFactory f1 = HbaseFactory.getInstance();
        HbaseFactory f2 = HbaseFactory.getInstance();
        Assertions.assertSame(f1, f2);
    }

    @Test
    public void test02_providers() {
        HbaseFactory factory = HbaseFactory.getInstance();
        Assertions.assertNotNull(factory.getUserUtils());
        Assertions.assertNotNull(factory.getAuthUtils());
        Assertions.assertNotNull(factory.getAuditHandler());
    }

    @Test
    public void test03_initializeDelegates() {
        Configuration conf = new Configuration(false);
        HbaseFactory.initialize(conf);
        // nothing to assert; method exists for side-effects/coverage
        Assertions.assertTrue(true);
    }
}
