{
  "serviceName": "cl1_hbase",
  "serviceId": 9,
  "policyVersion": 10,
  "policyUpdateTime": "20170301-09:49:38.000-+0000",
  "policies": [
    {
      "service": "cl1_hbase",
      "name": "all - table, column-family, column",
      "policyType": 0,
      "description": "Policy for all - table, column-family, column",
      "isAuditEnabled": true,
      "resources": {
        "column-family": {
          "values": [
            "*"
          ],
          "isExcludes": false,
          "isRecursive": false
        },
        "column": {
          "values": [
            "*"
          ],
          "isExcludes": false,
          "isRecursive": false
        },
        "table": {
          "values": [
            "*"
          ],
          "isExcludes": false,
          "isRecursive": false
        }
      },
      "policyItems": [
        {
          "accesses": [
            {
              "type": "read",
              "isAllowed": true
            },
            {
              "type": "write",
              "isAllowed": true
            },
            {
              "type": "create",
              "isAllowed": true
            },
            {
              "type": "admin",
              "isAllowed": true
            }
          ],
          "users": [
            "${user.name}"
          ],
          "groups": [
            "supergroup"
          ],
          "conditions": [],
          "delegateAdmin": true
        }
      ],
      "denyPolicyItems": [],
      "allowExceptions": [],
      "denyExceptions": [],
      "dataMaskPolicyItems": [],
      "rowFilterPolicyItems": [],
      "id": 32,
      "isEnabled": true,
      "version": 2
    },
    {
      "service": "cl1_hbase",
      "name": "TempPolicy",
      "policyType": 0,
      "description": "",
      "isAuditEnabled": true,
      "resources": {
        "column-family": {
          "values": [
            "colfam1"
          ],
          "isExcludes": false,
          "isRecursive": false
        },
        "column": {
          "values": [
            "*"
          ],
          "isExcludes": false,
          "isRecursive": false
        },
        "table": {
          "values": [
            "temp"
          ],
          "isExcludes": false,
          "isRecursive": false
        }
      },
      "policyItems": [
        {
          "accesses": [
            {
              "type": "read",
              "isAllowed": true
            },
            {
              "type": "write",
              "isAllowed": true
            }
          ],
          "users": [],
          "groups": [
            "IT"
          ],
          "conditions": [],
          "delegateAdmin": false
        }
      ],
      "denyPolicyItems": [],
      "allowExceptions": [],
      "denyExceptions": [],
      "dataMaskPolicyItems": [],
      "rowFilterPolicyItems": [],
      "id": 33,
      "isEnabled": true,
      "version": 1
    },
    {
      "service": "cl1_hbase",
      "name": "TempPolicy",
      "policyType": 0,
      "description": "",
      "isAuditEnabled": true,
      "resources": {
        "column-family": {
          "values": [
            "*"
          ],
          "isExcludes": false,
          "isRecursive": false
        },
        "column": {
          "values": [
            "*"
          ],
          "isExcludes": false,
          "isRecursive": false
        },
        "table": {
          "values": [
            "temp5"
          ],
          "isExcludes": false,
          "isRecursive": false
        }
      },
      "policyItems": [
        {
          "accesses": [
            {
              "type": "read",
              "isAllowed": true
            },
            {
              "type": "write",
              "isAllowed": true
            },
            {
              "type": "execute",
              "isAllowed": true
            }
          ],
          "users": [],
          "groups": [
            "IT"
          ],
          "conditions": [],
          "delegateAdmin": false
        }
      ],
      "denyPolicyItems": [],
      "allowExceptions": [],
      "denyExceptions": [],
      "dataMaskPolicyItems": [],
      "rowFilterPolicyItems": [],
      "id": 33,
      "isEnabled": true,
      "version": 1
    },
    {
      "service": "cl1_hbase",
      "name": "HBASETest-3-namespace",
      "description": "Default Policy for Service: HBASETest for namespace test_namespace",
      "isAuditEnabled": true,
      "resources": {
        "column": {
          "values": [
            "*"
          ],
          "isExcludes": false,
          "isRecursive": false
        },
        "column-family": {
          "values": [
            "*"
          ],
          "isExcludes": false,
          "isRecursive": false
        },
        "table": {
          "values": [
            "test_namespace:*"
          ],
          "isExcludes": false,
          "isRecursive": false
        }
      },
      "policyItems": [
        {
          "accesses": [
            {
              "type": "admin",
              "isAllowed": true
            }
          ],
          "users": [
          ],
          "groups": [
            "QA"
          ],
          "conditions": [],
          "delegateAdmin": true
        }
      ],
      "denyPolicyItems": [],
      "allowExceptions": [],
      "denyExceptions": [],
      "dataMaskPolicyItems": [],
      "rowFilterPolicyItems": [],
      "id": 38,
      "isEnabled": true,
      "version": 1
    },
    {
      "service": "cl1_hbase", "name": "TempPolicyForOptimizedColAuth", "policyType": 0, "description": "", "isAuditEnabled": true,
      "resources": {
        "column-family": {"values": ["colfam1"], "isExcludes": false, "isRecursive": false },
        "column": {"values": ["col1"], "isExcludes": false, "isRecursive": false},
        "table": {"values": ["temp6"], "isExcludes": false, "isRecursive": false}
      },
      "policyItems": [
        {
          "accesses": [
            {"type": "read", "isAllowed": true},
            {"type": "write", "isAllowed": true},
            {"type": "execute", "isAllowed": true}
          ],
          "users": [], "groups": ["IT"], "conditions": [], "delegateAdmin": false
        }
      ],
      "id": 101, "isEnabled": true, "version": 1
    },
    {
      "service": "cl1_hbase", "name": "AllowColFamWhenColDeniedForOptimized", "policyType": 0, "description": "", "isAuditEnabled": true,
      "resources": {
        "column-family": {"values": ["colfam1"], "isExcludes": false, "isRecursive": false},
        "column": {"values": ["*"], "isExcludes": false, "isRecursive": false},
        "table": {"values": ["temp7"], "isExcludes": false, "isRecursive": false}
      },
      "policyItems": [
        {
          "accesses": [
            {"type": "read", "isAllowed": true},
            {"type": "write", "isAllowed": true},
            {"type": "execute", "isAllowed": true}
          ],
          "users": [], "groups": ["IT"], "conditions": [], "delegateAdmin": false
        }
      ],
      "id": 102, "isEnabled": true, "version": 1
    },
    {
      "service": "cl1_hbase", "name": "DenyColWhenColFamAllowedForOptimizedCheck", "policyType": 0, "description": "", "isAuditEnabled": true,
      "resources": {
        "column-family": {"values": ["colfam1"], "isExcludes": false, "isRecursive": false},
        "column": {"values": ["col1"], "isExcludes": false, "isRecursive": false},
        "table": {"values": ["temp7"], "isExcludes": false, "isRecursive": false}
      },
      "denyPolicyItems": [
        {
          "accesses": [
            {"type": "read", "isAllowed": true},
            {"type": "write", "isAllowed": true},
            {"type": "execute", "isAllowed": true}
          ],
          "users": [], "groups": ["IT"], "conditions": [], "delegateAdmin": false
        }
      ],
      "id": 103, "isEnabled": true, "version": 1
    },
    {
      "service": "cl1_hbase", "name": "PolicyForAllowColumnFamilyForScan", "policyType": 0, "description": "", "isAuditEnabled": true,
      "resources": {
        "column-family": {"values": ["colfam1"], "isExcludes": false, "isRecursive": false},
        "column": {"values": ["*"], "isExcludes": false, "isRecursive": false},
        "table": {"values": ["temp8"], "isExcludes": false, "isRecursive": false}
      },
      "policyItems": [
        {
          "accesses": [
            {"type": "read", "isAllowed": true},
            {"type": "write", "isAllowed": true},
            {"type": "execute", "isAllowed": true}
          ],
          "users": [], "groups": ["IT","IT2"], "conditions": [], "delegateAdmin": false
        }
      ],
      "id": 104, "isEnabled": true, "version": 1
    },
    {
      "service": "cl1_hbase", "name": "PolicyForDenyColumnForScan", "policyType": 0, "description": "", "isAuditEnabled": true,
      "resources": {
        "column-family": {"values": ["colfam1"], "isExcludes": false, "isRecursive": false},
        "column": {"values": ["col1"], "isExcludes": false, "isRecursive": false},
        "table": {"values": ["temp8"], "isExcludes": false, "isRecursive": false}
      },
      "denyPolicyItems": [
        {
          "accesses": [
            {"type": "read", "isAllowed": true},
            {"type": "write", "isAllowed": true},
            {"type": "execute", "isAllowed": true}
          ],
          "users": [], "groups": ["IT"], "conditions": [], "delegateAdmin": false
        }
      ],
      "id": 105, "isEnabled": true, "version": 1
    }
  ],
  "serviceDef": {
    "name": "hbase",
    "implClass": "org.apache.ranger.services.hbase.RangerServiceHBase",
    "label": "HBase",
    "description": "HBase",
    "options": {},
    "configs": [
      {
        "itemId": 1,
        "name": "username",
        "type": "string",
        "subType": "",
        "mandatory": true,
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": "",
        "label": "Username"
      },
      {
        "itemId": 2,
        "name": "password",
        "type": "password",
        "subType": "",
        "mandatory": true,
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": "",
        "label": "Password"
      },
      {
        "itemId": 3,
        "name": "hadoop.security.authentication",
        "type": "enum",
        "subType": "authnType",
        "mandatory": true,
        "defaultValue": "simple",
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": ""
      },
      {
        "itemId": 4,
        "name": "hbase.master.kerberos.principal",
        "type": "string",
        "subType": "",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "itemId": 5,
        "name": "hbase.security.authentication",
        "type": "enum",
        "subType": "authnType",
        "mandatory": true,
        "defaultValue": "simple",
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": ""
      },
      {
        "itemId": 6,
        "name": "hbase.zookeeper.property.clientPort",
        "type": "int",
        "subType": "",
        "mandatory": true,
        "defaultValue": "2181",
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": ""
      },
      {
        "itemId": 7,
        "name": "hbase.zookeeper.quorum",
        "type": "string",
        "subType": "",
        "mandatory": true,
        "defaultValue": "",
        "validationRegEx": "",
        "validationMessage": ""
      },
      {
        "itemId": 8,
        "name": "zookeeper.znode.parent",
        "type": "string",
        "subType": "",
        "mandatory": true,
        "defaultValue": "/hbase",
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": ""
      },
      {
        "itemId": 9,
        "name": "commonNameForCertificate",
        "type": "string",
        "subType": "",
        "mandatory": false,
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": "",
        "label": "Common Name for Certificate"
      }
    ],
    "resources": [
      {
        "itemId": 1,
        "name": "table",
        "type": "string",
        "level": 10,
        "mandatory": true,
        "lookupSupported": true,
        "recursiveSupported": false,
        "excludesSupported": true,
        "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
        "matcherOptions": {
          "wildCard": "true",
          "ignoreCase": "false"
        },
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": "",
        "label": "HBase Table",
        "description": "HBase Table"
      },
      {
        "itemId": 2,
        "name": "column-family",
        "type": "string",
        "level": 20,
        "parent": "table",
        "mandatory": true,
        "lookupSupported": true,
        "recursiveSupported": false,
        "excludesSupported": true,
        "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
        "matcherOptions": {
          "wildCard": "true",
          "ignoreCase": "false"
        },
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": "",
        "label": "HBase Column-family",
        "description": "HBase Column-family"
      },
      {
        "itemId": 3,
        "name": "column",
        "type": "string",
        "level": 30,
        "parent": "column-family",
        "mandatory": true,
        "lookupSupported": false,
        "recursiveSupported": false,
        "excludesSupported": true,
        "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
        "matcherOptions": {
          "wildCard": "true",
          "ignoreCase": "false"
        },
        "validationRegEx": "",
        "validationMessage": "",
        "uiHint": "",
        "label": "HBase Column",
        "description": "HBase Column"
      }
    ],
    "accessTypes": [
      {
        "itemId": 1,
        "name": "read",
        "label": "Read",
        "impliedGrants": []
      },
      {
        "itemId": 2,
        "name": "write",
        "label": "Write",
        "impliedGrants": []
      },
      {
        "itemId": 3,
        "name": "create",
        "label": "Create",
        "impliedGrants": []
      },
      {
        "itemId": 4,
        "name": "admin",
        "label": "Admin",
        "impliedGrants": [
          "read",
          "write",
          "create"
        ]
      }
    ],
    "policyConditions": [],
    "contextEnrichers": [],
    "enums": [
      {
        "itemId": 1,
        "name": "authnType",
        "elements": [
          {
            "itemId": 1,
            "name": "simple",
            "label": "Simple"
          },
          {
            "itemId": 2,
            "name": "kerberos",
            "label": "Kerberos"
          }
        ],
        "defaultIndex": 0
      }
    ],
    "dataMaskDef": {
      "maskTypes": [],
      "accessTypes": [],
      "resources": []
    },
    "rowFilterDef": {
      "accessTypes": [],
      "resources": []
    },
    "id": 2,
    "guid": "d6cea1f0-2509-4791-8fc1-7b092399ba3b",
    "isEnabled": true,
    "createTime": "20170217-11:41:32.000-+0000",
    "updateTime": "20170217-11:41:32.000-+0000",
    "version": 1
  },
  "auditMode": "audit-default",
  "tagPolicies": {
    "serviceName": "KafkaTagService",
    "serviceId": 5,
    "policyVersion": 21,
    "policyUpdateTime": "20170301-09:49:38.000-+0000",
    "policies": [
      {
        "service": "KafkaTagService",
        "name": "EXPIRES_ON",
        "policyType": 0,
        "description": "Policy for data with EXPIRES_ON tag",
        "isAuditEnabled": true,
        "resources": {
          "tag": {
            "values": [
              "EXPIRES_ON"
            ],
            "isExcludes": false,
            "isRecursive": false
          }
        },
        "policyItems": [],
        "denyPolicyItems": [
          {
            "accesses": [
              {
                "type": "hdfs:read",
                "isAllowed": true
              },
              {
                "type": "hdfs:write",
                "isAllowed": true
              },
              {
                "type": "hdfs:execute",
                "isAllowed": true
              },
              {
                "type": "hbase:read",
                "isAllowed": true
              },
              {
                "type": "hbase:write",
                "isAllowed": true
              },
              {
                "type": "hbase:create",
                "isAllowed": true
              },
              {
                "type": "hbase:admin",
                "isAllowed": true
              },
              {
                "type": "hive:select",
                "isAllowed": true
              },
              {
                "type": "hive:update",
                "isAllowed": true
              },
              {
                "type": "hive:create",
                "isAllowed": true
              },
              {
                "type": "hive:drop",
                "isAllowed": true
              },
              {
                "type": "hive:alter",
                "isAllowed": true
              },
              {
                "type": "hive:index",
                "isAllowed": true
              },
              {
                "type": "hive:lock",
                "isAllowed": true
              },
              {
                "type": "hive:all",
                "isAllowed": true
              },
              {
                "type": "yarn:submit-app",
                "isAllowed": true
              },
              {
                "type": "yarn:admin-queue",
                "isAllowed": true
              },
              {
                "type": "knox:allow",
                "isAllowed": true
              },
              {
                "type": "storm:submitTopology",
                "isAllowed": true
              },
              {
                "type": "storm:fileUpload",
                "isAllowed": true
              },
              {
                "type": "storm:fileDownload",
                "isAllowed": true
              },
              {
                "type": "storm:killTopology",
                "isAllowed": true
              },
              {
                "type": "storm:rebalance",
                "isAllowed": true
              },
              {
                "type": "storm:activate",
                "isAllowed": true
              },
              {
                "type": "storm:deactivate",
                "isAllowed": true
              },
              {
                "type": "storm:getTopologyConf",
                "isAllowed": true
              },
              {
                "type": "storm:getTopology",
                "isAllowed": true
              },
              {
                "type": "storm:getUserTopology",
                "isAllowed": true
              },
              {
                "type": "storm:getTopologyInfo",
                "isAllowed": true
              },
              {
                "type": "storm:uploadNewCredentials",
                "isAllowed": true
              },
              {
                "type": "kms:create",
                "isAllowed": true
              },
              {
                "type": "kms:delete",
                "isAllowed": true
              },
              {
                "type": "kms:rollover",
                "isAllowed": true
              },
              {
                "type": "kms:setkeymaterial",
                "isAllowed": true
              },
              {
                "type": "kms:get",
                "isAllowed": true
              },
              {
                "type": "kms:getkeys",
                "isAllowed": true
              },
              {
                "type": "kms:getmetadata",
                "isAllowed": true
              },
              {
                "type": "kms:generateeek",
                "isAllowed": true
              },
              {
                "type": "kms:decrypteek",
                "isAllowed": true
              },
              {
                "type": "solr:query",
                "isAllowed": true
              },
              {
                "type": "solr:update",
                "isAllowed": true
              },
              {
                "type": "solr:others",
                "isAllowed": true
              },
              {
                "type": "solr:solr_admin",
                "isAllowed": true
              },
              {
                "type": "kafka:publish",
                "isAllowed": true
              },
              {
                "type": "kafka:consume",
                "isAllowed": true
              },
              {
                "type": "kafka:configure",
                "isAllowed": true
              },
              {
                "type": "kafka:describe",
                "isAllowed": true
              },
              {
                "type": "kafka:create",
                "isAllowed": true
              },
              {
                "type": "kafka:delete",
                "isAllowed": true
              },
              {
                "type": "kafka:kafka_admin",
                "isAllowed": true
              },
              {
                "type": "atlas:read",
                "isAllowed": true
              },
              {
                "type": "atlas:create",
                "isAllowed": true
              },
              {
                "type": "atlas:update",
                "isAllowed": true
              },
              {
                "type": "atlas:delete",
                "isAllowed": true
              },
              {
                "type": "atlas:all",
                "isAllowed": true
              }
            ],
            "users": [],
            "groups": [
              "public"
            ],
            "conditions": [
              {
                "type": "accessed-after-expiry",
                "values": [
                  "yes"
                ]
              }
            ],
            "delegateAdmin": false
          }
        ],
        "allowExceptions": [],
        "denyExceptions": [],
        "dataMaskPolicyItems": [],
        "rowFilterPolicyItems": [],
        "id": 10,
        "isEnabled": true,
        "version": 1
      },
      {
        "service": "KafkaTagService",
        "name": "HBaseTablePolicy",
        "policyType": 0,
        "description": "",
        "isAuditEnabled": true,
        "resources": {
          "tag": {
            "values": [
              "HbaseTableTag"
            ],
            "isExcludes": false,
            "isRecursive": false
          }
        },
        "policyItems": [
          {
            "accesses": [
              {
                "type": "hbase:create",
                "isAllowed": true
              }
            ],
            "users": [],
            "groups": [
              "dev"
            ],
            "conditions": [],
            "delegateAdmin": false
          }
        ],
        "denyPolicyItems": [],
        "allowExceptions": [],
        "denyExceptions": [],
        "dataMaskPolicyItems": [],
        "rowFilterPolicyItems": [],
        "id": 34,
        "isEnabled": true,
        "version": 4
      },
      {
        "service": "KafkaTagService",
        "name": "HBaseColumnFamilyPolicy",
        "policyType": 0,
        "description": "",
        "isAuditEnabled": true,
        "resources": {
          "tag": {
            "values": [
              "HbaseColFamTag"
            ],
            "isExcludes": false,
            "isRecursive": false
          }
        },
        "policyItems": [
          {
            "accesses": [
              {
                "type": "hbase:read",
                "isAllowed": true
              }
            ],
            "users": [],
            "groups": [
              "dev"
            ],
            "conditions": [],
            "delegateAdmin": false
          }
        ],
        "denyPolicyItems": [],
        "allowExceptions": [],
        "denyExceptions": [],
        "dataMaskPolicyItems": [],
        "rowFilterPolicyItems": [],
        "id": 35,
        "isEnabled": true,
        "version": 1
      },
      {
        "service": "KafkaTagService",
        "name": "HBaseColumnPolicy",
        "policyType": 0,
        "description": "",
        "isAuditEnabled": true,
        "resources": {
          "tag": {
            "values": [
              "HbaseColTag"
            ],
            "isExcludes": false,
            "isRecursive": false
          }
        },
        "policyItems": [
          {
            "accesses": [
              {
                "type": "hbase:write",
                "isAllowed": true
              }
            ],
            "users": [],
            "groups": [
              "dev"
            ],
            "conditions": [],
            "delegateAdmin": false
          }
        ],
        "denyPolicyItems": [],
        "allowExceptions": [],
        "denyExceptions": [],
        "dataMaskPolicyItems": [],
        "rowFilterPolicyItems": [],
        "id": 36,
        "isEnabled": true,
        "version": 1
      }
    ],
    "serviceDef": {
      "name": "tag",
      "implClass": "org.apache.ranger.services.tag.RangerServiceTag",
      "label": "TAG",
      "description": "TAG Service Definition",
      "options": {
        "ui.pages": "tag-based-policies"
      },
      "configs": [],
      "resources": [
        {
          "itemId": 1,
          "name": "tag",
          "type": "string",
          "level": 1,
          "mandatory": true,
          "lookupSupported": true,
          "recursiveSupported": false,
          "excludesSupported": false,
          "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
          "matcherOptions": {
            "wildCard": "false",
            "ignoreCase": "false"
          },
          "validationRegEx": "",
          "validationMessage": "",
          "uiHint": "{ \"singleValue\":true }",
          "label": "TAG",
          "description": "TAG"
        }
      ],
      "accessTypes": [
        {
          "itemId": 1002,
          "name": "hdfs:read",
          "label": "Read",
          "impliedGrants": []
        },
        {
          "itemId": 1003,
          "name": "hdfs:write",
          "label": "Write",
          "impliedGrants": []
        },
        {
          "itemId": 1004,
          "name": "hdfs:execute",
          "label": "Execute",
          "impliedGrants": []
        },
        {
          "itemId": 2003,
          "name": "hbase:read",
          "label": "Read",
          "impliedGrants": []
        },
        {
          "itemId": 2004,
          "name": "hbase:write",
          "label": "Write",
          "impliedGrants": []
        },
        {
          "itemId": 2005,
          "name": "hbase:create",
          "label": "Create",
          "impliedGrants": []
        },
        {
          "itemId": 2006,
          "name": "hbase:admin",
          "label": "Admin",
          "impliedGrants": [
            "hbase:read",
            "hbase:write",
            "hbase:create"
          ]
        },
        {
          "itemId": 3004,
          "name": "hive:select",
          "label": "select",
          "impliedGrants": []
        },
        {
          "itemId": 3005,
          "name": "hive:update",
          "label": "update",
          "impliedGrants": []
        },
        {
          "itemId": 3006,
          "name": "hive:create",
          "label": "Create",
          "impliedGrants": []
        },
        {
          "itemId": 3007,
          "name": "hive:drop",
          "label": "Drop",
          "impliedGrants": []
        },
        {
          "itemId": 3008,
          "name": "hive:alter",
          "label": "Alter",
          "impliedGrants": []
        },
        {
          "itemId": 3009,
          "name": "hive:index",
          "label": "Index",
          "impliedGrants": []
        },
        {
          "itemId": 3010,
          "name": "hive:lock",
          "label": "Lock",
          "impliedGrants": []
        },
        {
          "itemId": 3011,
          "name": "hive:all",
          "label": "All",
          "impliedGrants": [
            "hive:select",
            "hive:update",
            "hive:create",
            "hive:drop",
            "hive:alter",
            "hive:index",
            "hive:lock"
          ]
        },
        {
          "itemId": 4005,
          "name": "yarn:submit-app",
          "label": "submit-app",
          "impliedGrants": []
        },
        {
          "itemId": 4006,
          "name": "yarn:admin-queue",
          "label": "admin-queue",
          "impliedGrants": [
            "yarn:submit-app"
          ]
        },
        {
          "itemId": 5006,
          "name": "knox:allow",
          "label": "Allow",
          "impliedGrants": []
        },
        {
          "itemId": 6007,
          "name": "storm:submitTopology",
          "label": "Submit Topology",
          "impliedGrants": [
            "storm:fileUpload",
            "storm:fileDownload"
          ]
        },
        {
          "itemId": 6008,
          "name": "storm:fileUpload",
          "label": "File Upload",
          "impliedGrants": []
        },
        {
          "itemId": 6011,
          "name": "storm:fileDownload",
          "label": "File Download",
          "impliedGrants": []
        },
        {
          "itemId": 6012,
          "name": "storm:killTopology",
          "label": "Kill Topology",
          "impliedGrants": []
        },
        {
          "itemId": 6013,
          "name": "storm:rebalance",
          "label": "Rebalance",
          "impliedGrants": []
        },
        {
          "itemId": 6014,
          "name": "storm:activate",
          "label": "Activate",
          "impliedGrants": []
        },
        {
          "itemId": 6015,
          "name": "storm:deactivate",
          "label": "Deactivate",
          "impliedGrants": []
        },
        {
          "itemId": 6016,
          "name": "storm:getTopologyConf",
          "label": "Get Topology Conf",
          "impliedGrants": []
        },
        {
          "itemId": 6017,
          "name": "storm:getTopology",
          "label": "Get Topology",
          "impliedGrants": []
        },
        {
          "itemId": 6018,
          "name": "storm:getUserTopology",
          "label": "Get User Topology",
          "impliedGrants": []
        },
        {
          "itemId": 6019,
          "name": "storm:getTopologyInfo",
          "label": "Get Topology Info",
          "impliedGrants": []
        },
        {
          "itemId": 6020,
          "name": "storm:uploadNewCredentials",
          "label": "Upload New Credential",
          "impliedGrants": []
        },
        {
          "itemId": 7008,
          "name": "kms:create",
          "label": "Create",
          "impliedGrants": []
        },
        {
          "itemId": 7009,
          "name": "kms:delete",
          "label": "Delete",
          "impliedGrants": []
        },
        {
          "itemId": 7010,
          "name": "kms:rollover",
          "label": "Rollover",
          "impliedGrants": []
        },
        {
          "itemId": 7011,
          "name": "kms:setkeymaterial",
          "label": "Set Key Material",
          "impliedGrants": []
        },
        {
          "itemId": 7012,
          "name": "kms:get",
          "label": "Get",
          "impliedGrants": []
        },
        {
          "itemId": 7013,
          "name": "kms:getkeys",
          "label": "Get Keys",
          "impliedGrants": []
        },
        {
          "itemId": 7014,
          "name": "kms:getmetadata",
          "label": "Get Metadata",
          "impliedGrants": []
        },
        {
          "itemId": 7015,
          "name": "kms:generateeek",
          "label": "Generate EEK",
          "impliedGrants": []
        },
        {
          "itemId": 7016,
          "name": "kms:decrypteek",
          "label": "Decrypt EEK",
          "impliedGrants": []
        },
        {
          "itemId": 8108,
          "name": "solr:query",
          "label": "Query",
          "impliedGrants": []
        },
        {
          "itemId": 8208,
          "name": "solr:update",
          "label": "Update",
          "impliedGrants": []
        },
        {
          "itemId": 8308,
          "name": "solr:others",
          "label": "Others",
          "impliedGrants": []
        },
        {
          "itemId": 8908,
          "name": "solr:solr_admin",
          "label": "Solr Admin",
          "impliedGrants": [
            "solr:query",
            "solr:update",
            "solr:others"
          ]
        },
        {
          "itemId": 9010,
          "name": "kafka:publish",
          "label": "Publish",
          "impliedGrants": [
            "kafka:describe"
          ]
        },
        {
          "itemId": 9011,
          "name": "kafka:consume",
          "label": "Consume",
          "impliedGrants": [
            "kafka:describe"
          ]
        },
        {
          "itemId": 9014,
          "name": "kafka:configure",
          "label": "Configure",
          "impliedGrants": [
            "kafka:describe"
          ]
        },
        {
          "itemId": 9015,
          "name": "kafka:describe",
          "label": "Describe",
          "impliedGrants": []
        },
        {
          "itemId": 9017,
          "name": "kafka:create",
          "label": "Create",
          "impliedGrants": []
        },
        {
          "itemId": 9018,
          "name": "kafka:delete",
          "label": "Delete",
          "impliedGrants": []
        },
        {
          "itemId": 9016,
          "name": "kafka:kafka_admin",
          "label": "Kafka Admin",
          "impliedGrants": [
            "kafka:publish",
            "kafka:consume",
            "kafka:configure",
            "kafka:describe",
            "kafka:create",
            "kafka:delete"
          ]
        },
        {
          "itemId": 11012,
          "name": "atlas:read",
          "label": "read",
          "impliedGrants": []
        },
        {
          "itemId": 11013,
          "name": "atlas:create",
          "label": "create",
          "impliedGrants": []
        },
        {
          "itemId": 11014,
          "name": "atlas:update",
          "label": "update",
          "impliedGrants": []
        },
        {
          "itemId": 11015,
          "name": "atlas:delete",
          "label": "delete",
          "impliedGrants": []
        },
        {
          "itemId": 11016,
          "name": "atlas:all",
          "label": "All",
          "impliedGrants": [
            "atlas:read",
            "atlas:create",
            "atlas:update",
            "atlas:delete"
          ]
        }
      ],
      "policyConditions": [
        {
          "itemId": 1,
          "name": "accessed-after-expiry",
          "evaluator": "org.apache.ranger.plugin.conditionevaluator.RangerScriptTemplateConditionEvaluator",
          "evaluatorOptions": {
            "scriptTemplate": "ctx.isAccessedAfter(\u0027expiry_date\u0027);"
          },
          "uiHint": "{ \"singleValue\":true }",
          "label": "Accessed after expiry_date (yes/no)?",
          "description": "Accessed after expiry_date? (yes/no)"
        }
      ],
      "contextEnrichers": [
        {
          "itemId": 1,
          "name": "TagEnricher",
          "enricher": "org.apache.ranger.plugin.contextenricher.RangerTagEnricher",
          "enricherOptions": {
            "tagRetrieverClassName": "org.apache.ranger.plugin.contextenricher.RangerAdminTagRetriever",
            "tagRefresherPollingInterval": "60000"
          }
        }
      ],
      "enums": [],
      "dataMaskDef": {
        "maskTypes": [],
        "accessTypes": [],
        "resources": []
      },
      "rowFilterDef": {
        "accessTypes": [],
        "resources": []
      },
      "id": 100,
      "guid": "0d047248-baff-4cf9-8e9e-d5d377284b2e",
      "isEnabled": true,
      "createTime": "20170217-11:41:33.000-+0000",
      "updateTime": "20170217-11:41:35.000-+0000",
      "version": 11
    },
    "auditMode": "audit-default"
  }
}