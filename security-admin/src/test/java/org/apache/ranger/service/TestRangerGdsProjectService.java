/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.ranger.service;

import org.apache.ranger.common.RESTErrorUtil;
import org.apache.ranger.db.RangerDaoManager;
import org.apache.ranger.entity.XXGdsProject;
import org.apache.ranger.plugin.model.RangerGds.RangerProject;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * @generated by Cursor
 * @description : Unit Test cases for RangerGdsProjectService
 */

public class TestRangerGdsProjectService {
    @InjectMocks
    RangerGdsProjectService svc;

    @Mock
    RangerDaoManager                                  daoMgr;
    @Mock
    RESTErrorUtil                                     restErrorUtil;
    @Mock
    org.apache.ranger.common.db.BaseDao<XXGdsProject> entityDao;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void mapEntityToViewBean_roundTrip() {
        XXGdsProject x = new XXGdsProject();
        x.setGuid("g");
        x.setIsEnabled(true);
        x.setVersion(1L);
        x.setName("n");
        x.setDescription("d");
        x.setAcl("{}");
        x.setOptions("{}");
        x.setAdditionalInfo("{}");

        RangerProject v = svc.populateViewBean(x);
        assertEquals("g", v.getGuid());
        assertEquals("n", v.getName());
    }

    @Test
    public void testSearchAndSortFieldsInitialized() {
        RangerGdsProjectService svc = new RangerGdsProjectService();
        assertNotNull(svc.searchFields);
        assertNotNull(svc.sortFields);
        assertFalse(svc.searchFields.isEmpty());
        assertFalse(svc.sortFields.isEmpty());
    }
}
