/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.ranger.service;

import org.apache.ranger.common.SearchField;
import org.apache.ranger.common.SortField;
import org.apache.ranger.entity.XXTagResourceMap;
import org.apache.ranger.plugin.model.RangerTagResourceMap;
import org.apache.ranger.plugin.store.PList;
import org.apache.ranger.plugin.util.SearchFilter;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * @generated by Cursor
 * @description : Unit Test cases for RangerTagResourceMapServiceBase
 */

@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestRangerTagResourceMapServiceBase {
    @Test
    public void testMapViewToEntityBean_setsGuidAndIds() {
        TestableService      svc = new TestableService();
        RangerTagResourceMap v   = new RangerTagResourceMap();
        v.setGuid("g");
        v.setTagId(11L);
        v.setResourceId(22L);
        XXTagResourceMap x = new XXTagResourceMap();
        x = svc.mapViewToEntityBean(v, x, 0);
        assertEquals("g", x.getGuid());
        assertEquals(Long.valueOf(11L), x.getTagId());
        assertEquals(Long.valueOf(22L), x.getResourceId());
    }

    @Test
    public void testSearchRangerTaggedResources_returnsMappedList() {
        TestableService  svc = new TestableService();
        XXTagResourceMap x   = new XXTagResourceMap();
        x.setGuid("g2");
        svc.nextResults = Collections.singletonList(x);
        SearchFilter                filter = new SearchFilter();
        PList<RangerTagResourceMap> out    = svc.searchRangerTaggedResources(filter);
        assertNotNull(out);
        assertEquals(1, out.getList().size());
        assertEquals("g2", out.getList().get(0).getGuid());
    }

    public static class TestableService extends RangerTagResourceMapServiceBase<XXTagResourceMap, RangerTagResourceMap> {
        public List<XXTagResourceMap> nextResults = new ArrayList<>();

        @Override
        protected XXTagResourceMap populateEntityBeanForCreate(XXTagResourceMap t, RangerTagResourceMap vObj) {
            return t;
        }

        @Override
        protected XXTagResourceMap populateEntityBeanForUpdate(XXTagResourceMap t, RangerTagResourceMap vObj) {
            return t;
        }

        @Override
        protected void validateForCreate(RangerTagResourceMap vObj) {}

        @Override
        protected void validateForUpdate(RangerTagResourceMap vObj, XXTagResourceMap t) {}

        @Override
        protected List<XXTagResourceMap> searchRangerObjects(SearchFilter searchFilter, List<SearchField> searchFieldList, List<SortField> sortFieldList, PList<RangerTagResourceMap> pList) {
            return nextResults;
        }

        @Override
        protected RangerTagResourceMap mapEntityToViewBean(RangerTagResourceMap vObj, XXTagResourceMap xObj) {
            RangerTagResourceMap v = new RangerTagResourceMap();
            v.setGuid(xObj.getGuid());
            return v;
        }
    }
}
