/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.ranger.service;

import org.apache.ranger.common.SearchField;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertTrue;

/**
 * @generated by Cursor
 * @description : Unit Test cases for XPolicyExportAuditService
 */

public class TestXPolicyExportAuditService {
    @Test
    public void constructor_populatesSearchAndSortFields() {
        XPolicyExportAuditService svc = new XPolicyExportAuditService();

        assertTrue(svc.searchFields.stream().anyMatch(sf -> sf.getClientFieldName().equals("httpRetCode") && sf.getDataType() == SearchField.DATA_TYPE.INTEGER));
        assertTrue(svc.searchFields.stream().anyMatch(sf -> sf.getClientFieldName().equals("clientIP") && sf.getDataType() == SearchField.DATA_TYPE.STRING));
        assertTrue(svc.searchFields.stream().anyMatch(sf -> sf.getClientFieldName().equals("agentId")));
        assertTrue(svc.searchFields.stream().anyMatch(sf -> sf.getClientFieldName().equals("repositoryName")));
        assertTrue(svc.searchFields.stream().anyMatch(sf -> sf.getClientFieldName().equals("cluster")));
        assertTrue(svc.searchFields.stream().anyMatch(sf -> sf.getClientFieldName().equals("startDate") && sf.getSearchType() == SearchField.SEARCH_TYPE.GREATER_EQUAL_THAN));
        assertTrue(svc.searchFields.stream().anyMatch(sf -> sf.getClientFieldName().equals("endDate") && sf.getSearchType() == SearchField.SEARCH_TYPE.LESS_EQUAL_THAN));
        assertTrue(svc.sortFields.get(0).isDefault());
    }
}
