/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.ranger.service;

import org.apache.ranger.common.RESTErrorUtil;
import org.apache.ranger.db.RangerDaoManager;
import org.apache.ranger.entity.XXPolicyWithAssignedId;
import org.apache.ranger.plugin.model.RangerPolicy;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.any;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.spy;

/**
 * @generated by Cursor
 * @description : Unit Test cases for RangerPolicyWithAssignedIdService
 */

public class TestRangerPolicyWithAssignedIdService {
    @InjectMocks
    RangerPolicyWithAssignedIdService svc;

    @Mock
    RangerDaoManager                                                                     daoMgr;
    @Mock
    RESTErrorUtil                                                                        restErrorUtil;
    @Mock
    org.apache.ranger.common.db.BaseDao<org.apache.ranger.entity.XXPolicyWithAssignedId> entityDao;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void populateViewBean_usesRetriever() {
        XXPolicyWithAssignedId x = new XXPolicyWithAssignedId();
        x.setId(5L);
        RangerPolicyWithAssignedIdService spySvc   = spy(svc);
        RangerPolicy                      expected = new RangerPolicy();
        expected.setId(5L);
        doReturn(expected).when(spySvc).populateViewBean(any(XXPolicyWithAssignedId.class));
        RangerPolicy v = spySvc.getPopulatedViewObject(x);
        assertEquals(Long.valueOf(5L), v.getId());
    }
}
