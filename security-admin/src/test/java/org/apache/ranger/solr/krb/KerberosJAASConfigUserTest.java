/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.ranger.solr.krb;

import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import javax.security.auth.Subject;
import javax.security.auth.login.LoginContext;

import java.util.Properties;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * @generated by Cursor
 * @description : Unit Test cases for KerberosJAASConfigUser
 */

@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class KerberosJAASConfigUserTest {
    @Test
    public void getPrincipal_readsFromConfigurationOptions() throws Exception {
        Properties p = new Properties();
        p.setProperty(InMemoryJAASConfiguration.JAAS_CONFIG_PREFIX_PARAM + "Client.loginModuleName", "com.sun.security.auth.module.Krb5LoginModule");
        p.setProperty(InMemoryJAASConfiguration.JAAS_CONFIG_PREFIX_PARAM + "Client.option.principal", "user@EXAMPLE.COM");
        InMemoryJAASConfiguration conf = InMemoryJAASConfiguration.init(p);

        KerberosJAASConfigUser user = new KerberosJAASConfigUser("Client", conf);
        assertEquals("user@EXAMPLE.COM", user.getPrincipal());
    }

    @Test
    public void createLoginContext_buildsWithProvidedConfig() throws Exception {
        Properties p = new Properties();
        p.setProperty(InMemoryJAASConfiguration.JAAS_CONFIG_PREFIX_PARAM + "C.loginModuleName", "com.sun.security.auth.module.Krb5LoginModule");
        InMemoryJAASConfiguration conf = InMemoryJAASConfiguration.init(p);

        KerberosJAASConfigUser user = new KerberosJAASConfigUser("C", conf);
        LoginContext           ctx  = user.createLoginContext(new Subject());
        assertNotNull(ctx);
    }
}
