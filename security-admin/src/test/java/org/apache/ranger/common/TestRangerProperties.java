/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.ranger.common;

import org.apache.ranger.plugin.util.XMLUtils;
import org.junit.Assert;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.util.Properties;

/**
 * @generated by Cursor
 * @description : Unit Test cases for RangerProperties
 */

public class TestRangerProperties {
    @Test
    public void testXMLPropertiesUtilLoadsFromStream() {
        String xml = "<configuration>" +
                "<property><name>ranger.test.key</name><value>value1</value></property>" +
                "</configuration>";
        XMLPropertiesUtil xmlProps = new XMLPropertiesUtil();
        Properties        props    = new Properties();
        InputStream       is       = new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8));
        xmlProps.loadFromXml(props, is);
        Assert.assertEquals("value1", props.getProperty("ranger.test.key"));
    }

    @Test
    public void testRangerPropertiesInitNoFiles() {
        RangerProperties rp = new RangerProperties("");
        Assert.assertTrue(rp.isEmpty());
    }

    @Test
    public void testXMLUtilsLoadConfigNoFileGraceful() {
        Properties props = new Properties();
        // Non-existing file should not throw, and leave props unchanged
        XMLUtils.loadConfig("non-existent-file.xml", props);
        Assert.assertTrue(props.isEmpty());
    }
}
