/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.ranger.common;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import javax.ws.rs.core.Response;

import java.io.IOException;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * @generated by Cursor
 * @description : Unit Test cases for RangerJsonProviders
 */

@ExtendWith(MockitoExtension.class)
public class TestRangerJsonProviders {
    @Test
    public void testRangerJsonProviderConstructs() {
        RangerJsonProvider provider = new RangerJsonProvider();
        assertNotNull(provider);
    }

    @Test
    public void testJsonParserExceptionMapperReturnsBadRequest() {
        RangerJsonParserExceptionMapper mapper = new RangerJsonParserExceptionMapper();
        JsonParseException              ex     = new JsonParseException(null, "bad");
        Response                        r      = mapper.toResponse(ex);
        assertEquals(Response.Status.BAD_REQUEST.getStatusCode(), r.getStatus());
    }

    @Test
    public void testJsonMappingExceptionMapperReturnsBadRequest() {
        RangerJsonMappingExceptionMapper mapper = new RangerJsonMappingExceptionMapper();
        JsonMappingException             ex     = JsonMappingException.fromUnexpectedIOE(new IOException("bad"));
        Response                         r      = mapper.toResponse(ex);
        assertEquals(Response.Status.BAD_REQUEST.getStatusCode(), r.getStatus());
    }
}
