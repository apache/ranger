/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.ranger.common;

import org.apache.ranger.view.VXAccessAuditList;
import org.apache.ranger.view.VXAssetList;
import org.apache.ranger.view.VXAuditMapList;
import org.apache.ranger.view.VXAuthSessionList;
import org.apache.ranger.view.VXCredentialStoreList;
import org.apache.ranger.view.VXGroupGroupList;
import org.apache.ranger.view.VXGroupList;
import org.apache.ranger.view.VXGroupUserList;
import org.apache.ranger.view.VXPermMapList;
import org.apache.ranger.view.VXPolicyExportAuditList;
import org.apache.ranger.view.VXPortalUserList;
import org.apache.ranger.view.VXResourceList;
import org.apache.ranger.view.VXResponse;
import org.apache.ranger.view.VXStringList;
import org.apache.ranger.view.VXUserList;
import org.junit.Before;
import org.junit.Test;

import javax.xml.bind.JAXBContext;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

/**
 * @generated by Cursor
 * @description : Unit Test cases for RangerJAXBContextResolver
 */

public class TestRangerJAXBContextResolver {
    private RangerJAXBContextResolver contextResolver;

    @Before
    public void setUp() throws Exception {
        contextResolver = new RangerJAXBContextResolver();
    }

    @Test
    public void testConstructorInitializesContext() throws Exception {
        RangerJAXBContextResolver resolver = new RangerJAXBContextResolver();
        assertNotNull(resolver);
    }

    @Test
    public void testGetContextForVXAuthSessionList() {
        JAXBContext context = contextResolver.getContext(VXAuthSessionList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXResponse() {
        JAXBContext context = contextResolver.getContext(VXResponse.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXStringList() {
        JAXBContext context = contextResolver.getContext(VXStringList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXPortalUserList() {
        JAXBContext context = contextResolver.getContext(VXPortalUserList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXAssetList() {
        JAXBContext context = contextResolver.getContext(VXAssetList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXResourceList() {
        JAXBContext context = contextResolver.getContext(VXResourceList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXCredentialStoreList() {
        JAXBContext context = contextResolver.getContext(VXCredentialStoreList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXGroupList() {
        JAXBContext context = contextResolver.getContext(VXGroupList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXUserList() {
        JAXBContext context = contextResolver.getContext(VXUserList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXGroupUserList() {
        JAXBContext context = contextResolver.getContext(VXGroupUserList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXGroupGroupList() {
        JAXBContext context = contextResolver.getContext(VXGroupGroupList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXPermMapList() {
        JAXBContext context = contextResolver.getContext(VXPermMapList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXAuditMapList() {
        JAXBContext context = contextResolver.getContext(VXAuditMapList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXPolicyExportAuditList() {
        JAXBContext context = contextResolver.getContext(VXPolicyExportAuditList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForVXAccessAuditList() {
        JAXBContext context = contextResolver.getContext(VXAccessAuditList.class);
        assertNotNull(context);
    }

    @Test
    public void testGetContextForUnsupportedClass() {
        JAXBContext context = contextResolver.getContext(String.class);
        assertNull(context);
    }

    @Test
    public void testGetContextForUnknownClass() {
        class UnknownClass {}

        JAXBContext context = contextResolver.getContext(UnknownClass.class);
        assertNull(context);
    }

    @Test
    public void testGetContextForClassWithSameName() {
        // Test edge case where a different class might have the same name as a supported class
        JAXBContext context = contextResolver.getContext(VXStringList.class);
        assertNotNull(context);

        // Create another class with same simple name but different package
        class VXStringList {}

        JAXBContext context2 = contextResolver.getContext(VXStringList.class);
        assertNull(context2);
    }

    @Test
    public void testAllSupportedTypesReturnSameContext() {
        JAXBContext context1 = contextResolver.getContext(VXAuthSessionList.class);
        JAXBContext context2 = contextResolver.getContext(VXResponse.class);
        JAXBContext context3 = contextResolver.getContext(VXStringList.class);

        // All supported types should return the same context instance
        assertNotNull(context1);
        assertNotNull(context2);
        assertNotNull(context3);
        // They should all be the same instance
        // Note: This might depend on the implementation - if they're the same instance or not
    }

    @Test
    public void testContextResolverIsReusable() {
        // Test that the same resolver can be used multiple times
        JAXBContext context1 = contextResolver.getContext(VXAuthSessionList.class);
        JAXBContext context2 = contextResolver.getContext(VXAuthSessionList.class);

        assertNotNull(context1);
        assertNotNull(context2);
    }
}
