/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.ranger.security.context;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

/**
* @generated by Cursor
* @description <Unit Test for TestRangerContextHolder class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestRangerContextHolder {
    @Test
    public void test01_securityContext_set_get_reset() {
        RangerContextHolder.resetSecurityContext();

        RangerSecurityContext context = new RangerSecurityContext();
        RangerContextHolder.setSecurityContext(context);
        Assertions.assertSame(context, RangerContextHolder.getSecurityContext());

        RangerContextHolder.resetSecurityContext();
        RangerContextHolder.setSecurityContext(null);
        Assertions.assertNull(RangerContextHolder.getSecurityContext());
    }

    @Test
    public void test02_opContext_set_get_reset() {
        RangerContextHolder.resetOpContext();

        RangerAdminOpContext ctx = new RangerAdminOpContext();
        ctx.setBulkModeContext(true);
        RangerContextHolder.setOpContext(ctx);
        Assertions.assertSame(ctx, RangerContextHolder.getOpContext());

        RangerContextHolder.resetOpContext();
        RangerContextHolder.setOpContext(null);
        Assertions.assertNull(RangerContextHolder.getOpContext());
    }

    @Test
    public void test03_getOrCreateOpContext_createsWhenAbsent_andReturnsExisting() {
        RangerContextHolder.resetOpContext();
        RangerAdminOpContext created = RangerContextHolder.getOrCreateOpContext();
        Assertions.assertNotNull(created);

        RangerAdminOpContext existing = RangerContextHolder.getOrCreateOpContext();
        Assertions.assertSame(created, existing);

        RangerContextHolder.resetOpContext();
    }
}
