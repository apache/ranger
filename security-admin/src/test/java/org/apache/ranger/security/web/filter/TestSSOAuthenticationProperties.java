/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.ranger.security.web.filter;

import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;

/**
* @generated by Cursor
* @description <Unit Test for TestSSOAuthenticationProperties class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestSSOAuthenticationProperties {
    @Test
    public void testGettersSetters() {
        SSOAuthenticationProperties props = new SSOAuthenticationProperties();

        props.setAuthenticationProviderUrl("https://knox/gateway/knoxsso/api/v1/websso");
        props.setCookieName("hadoop-jwt");
        props.setOriginalUrlQueryParam("originalUrl");
        props.setUserAgentList(new String[] {"Mozilla", "Chrome"});
        List<String> audiences = Arrays.asList("ranger-admin", "ranger-users");
        props.setAudiences(audiences);
        props.setExpectedSigAlg("RS256");

        assertEquals("https://knox/gateway/knoxsso/api/v1/websso", props.getAuthenticationProviderUrl());
        assertEquals("hadoop-jwt", props.getCookieName());
        assertEquals("originalUrl", props.getOriginalUrlQueryParam());
        assertArrayEquals(new String[] {"Mozilla", "Chrome"}, props.getUserAgentList());
        assertEquals(audiences, props.getAudiences());
        assertEquals("RS256", props.getExpectedSigAlg());
    }
}
