/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.ranger.security.context;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Set;

/**
* @generated by Cursor
* @description <Unit Test for TestRangerAPIMapping class>
*/
@ExtendWith(MockitoExtension.class)
@TestMethodOrder(MethodOrderer.MethodName.class)
public class TestRangerAPIMapping {
    @Test
    public void test01_getAvailableUITabs_containsAllTabs() {
        RangerAPIMapping mapping = new RangerAPIMapping();
        Set<String> tabs = mapping.getAvailableUITabs();

        Assertions.assertTrue(tabs.contains(RangerAPIMapping.TAB_RESOURCE_BASED_POLICIES));
        Assertions.assertTrue(tabs.contains(RangerAPIMapping.TAB_TAG_BASED_POLICIES));
        Assertions.assertTrue(tabs.contains(RangerAPIMapping.TAB_AUDIT));
        Assertions.assertTrue(tabs.contains(RangerAPIMapping.TAB_REPORTS));
        Assertions.assertTrue(tabs.contains(RangerAPIMapping.TAB_KEY_MANAGER));
        Assertions.assertTrue(tabs.contains(RangerAPIMapping.TAB_PERMISSIONS));
        Assertions.assertTrue(tabs.contains(RangerAPIMapping.TAB_USERS_GROUPS));
        Assertions.assertTrue(tabs.contains(RangerAPIMapping.TAB_GDS));
    }

    @Test
    public void test02_getAssociatedTabsWithAPI_hasEntries_forKnownApis() {
        RangerAPIMapping mapping = new RangerAPIMapping();

        Set<String> tabsForCountAssets = mapping.getAssociatedTabsWithAPI(RangerAPIList.COUNT_X_ASSETS);
        Assertions.assertNotNull(tabsForCountAssets);
        Assertions.assertFalse(tabsForCountAssets.isEmpty());

        Set<String> tabsForGetUser = mapping.getAssociatedTabsWithAPI(RangerAPIList.GET_X_USER);
        Assertions.assertNotNull(tabsForGetUser);
        Assertions.assertFalse(tabsForGetUser.isEmpty());
    }
}
